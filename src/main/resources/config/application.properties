
### ------------ General Config -----------------------
server.port=8080
spring.profiles.default=dev
imdb-clone.backend.host=${BACKEND_APP_ADDRESS}
imdb-clone.frontend.host=${FRONTEND_APP_ADDRESS}


### ------------ Database Config ----------------------
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}?serverTimezone=UTC
spring.datasource.username=${MYSQL_USERNAME}
spring.datasource.password=${MYSQL_PASSWORD}

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.show-sql=${SHOW_SQL}
spring.jpa.properties.hibernate.format_sql=${FORMAT_SQL}
spring.jpa.open-in-view=false


### ------------ Serialization/Deserialization ----------------------
spring.jackson.default-property-inclusion=NON_NULL


### ------------ Scheduled Job Config - Thread Pool ---
spring.task.scheduling.pool.size=5


### ------------ Email Config (VerificationToken) -----
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

spring.mail.properties.mail.smtp.starttls.enable=${ENABLE_MAIL}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}


### ------------ Monitoring Config --------------------
management.endpoints.web.exposure.include=health,liveness,readiness
management.endpoint.health.probes.enabled=true


### ------------ Elasticsearch Config -----------------
spring.elasticsearch.rest.uris=${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}
# if security is turned on (xpack.security.enabled=true), these credentials
# are used (only for application-prod.properties, not for application-dev.properties)
spring.elasticsearch.username=${ELASTICSEARCH_USERNAME}
spring.elasticsearch.password=${ELASTICSEARCH_PASSWORD}
management.health.elasticsearch.enabled=true


### ------------ Minio Config -------------------------
minio.rest.uri=http://${MINIO_HOST}:${MINIO_PORT}
minio.rest.accessKey=${MINIO_ACCESS_KEY}
minio.rest.secretKey=${MINIO_SECRET_KEY}
minio.rest.bucketName=imdb-clone


### ------------ Documentation Config -----------------
## generate openapi-spec: http://localhost:8080/v3/api-docs.yaml
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/v3/swagger-ui.html


### ------------ Security Config (JWT, CORS) ----------
jwt.secret=fKq+2kMG4sdb7yrZDOuBJxYJ6SquHrEMI5wE/N0x1fOzkXjxu8G0Aue6lLY+fjogSTyuF0sm1c6X0ccRwJPUnQ==
jwt.expiration-in-ms=${JWT_EXPIRATION_TIME}

cors.allowed-origins=${CORS_ALLOWED_ORIGINS}
cors.allowed-endpoints=\
  /api/movie/{movieId},\
  /api/movie/get-movies,\
  /api/movie/create-movie,\
  /api/movie/search/{primaryTitle},\
  /api/auth/check-username-availability,\
  /api/auth/check-email-availability,\
  /api/auth/login,\
  /api/auth/registration,\
  /api/auth/confirm-email-address,\
  /api/auth/reset-password,\
  /api/auth/save-new-password,\
  /api/account/me,\
  /api/account/{username}/profile,\
  /api/account/{username}/comments,\
  /api/account/{username}/watchlist,\
  /api/account/{username}/ratings,\
  /api/account/add-account,\
  /api/account/{username},\
  /api/account/{username}/give-admin,\
  /api/account/{username}/take-admin,\
  /api/comment/{commentId},\
  /api/comment/{movieId}/comments,\
  /api/comment/{movieId},\
  /api/comment/{commentId},\
  /api/movie-rating/{movieId}/rating-score/{score},\
  /api/movie-rating/{movieId},\
  /api/watched-movie/{movieId}/watch,\
  /api/watched-movie/{movieId},\
  /api/search/movies,\
  /api/file-storage/profile-photo,\
  /api/file-storage/movie/{movieId},
