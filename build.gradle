plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.diffplug.spotless' version '6.7.2'
}

group = 'com.thecodinglab'
version = '1.0.0'

compileJava {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

repositories {
	mavenCentral()
}

compileJava.dependsOn 'spotlessApply'

spotless {
	java {
		target 'src/main/java/**/*.java'
		targetExclude 'build/**', 'frontend/**'
		targetExclude 'src/main/java/**/payload/*.java'
		importOrder()
		removeUnusedImports()
		trimTrailingWhitespace()
		googleJavaFormat()
		toggleOffOn()
	}
}

def springBootVersion = '2.7.4'

dependencies {
	// starters
	developmentOnly group: 'org.springframework.boot', name: 'spring-boot-devtools', version: "$springBootVersion"
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "$springBootVersion"
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: "$springBootVersion"
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: "$springBootVersion"

	// MySQL Database
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.29'
	// safely evolve DB schema - https://www.youtube.com/watch?v=xjXHecGOy84 - https://www.baeldung.com/liquibase-refactor-schema-of-java-app
	// implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.12.0'

	// documentation - swagger ui
	 implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.11'

	// serialization / deserialization
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.1'
	implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: '2.13.1'

	// validation
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: "$springBootVersion"
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

	// mapstruct mapping classes with many fields
	implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.5.2.Final'
	annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.5.2.Final'

	// security: JWT / OAuth2
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	implementation group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.5.2.RELEASE'
	implementation group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.1.1.RELEASE'

	// Email
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: "$springBootVersion"

	// Code Formatter
	implementation group: 'com.diffplug.spotless', name: 'spotless-plugin-gradle', version: '6.7.2'

	// ES client: index, query, sort, aggregate - https://www.elastic.co/guide/en/elasticsearch/client/java-api-client/current/searching.html
	implementation group: 'co.elastic.clients', name: 'elasticsearch-java', version: '8.2.1'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.4'
	implementation group: 'jakarta.json', name: 'jakarta.json-api', version: '2.1.1'

	// simpler ES alternative: MeiliSearch.
	// https://docs.meilisearch.com/learn/getting_started/quick_start.html#setup-and-installation
	// https://github.com/meilisearch/meilisearch-java#-installation
    // implementation group: 'com.meilisearch.sdk', name: 'meilisearch-java', version: '0.7.2'

	// monitoring
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: "$springBootVersion"
//	implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.7.2'

	// Testing
	testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "$springBootVersion"
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.9.1'
	testImplementation group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.19.0'
	 testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.7.0'
//	testImplementation group: 'junit', name: 'junit', version: '4.13.2'


}

test {
	useJUnitPlatform()
}
